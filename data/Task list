Number of samples of each class. Train test split needs to do 80% training and 20% testing from each class.

1: 14,
2: 14,
3: 4,
4: 38,
5: 126,
6: 82,
7: 70,
8: 74,
9: 13,
10: 23,
11: 25,
12: 61,
13: 41,
14: 9,
15: 32

Tasks to do.
1. Train test spit.


Questions:
How will we input the 2d data 2 the RNN? (At the moment, I am only classifying stream flow rate, or sediment flow).

How to reformat numerical float data to be input to RNN. Is float same as integer?

The data is just too less to train a RNN from scratch. Unlike CNNs I can not seem to find a trajectory pre-trained RNN.
  Some of the classes have less than 10 samples (as low as 4). Practically impossible to train a deep architecture. Can we train maybe a single or double layer network?

What architecture (we will need to understand RNN better).

Are there any pre-trained RNNs available like those in Keras, on trajectory data?
